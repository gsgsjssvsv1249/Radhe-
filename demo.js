#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const TaskScheduler = require('./modules/scheduler');
const SecurityManager = require('./modules/security');
const FileManager = require('./modules/fileManager');
const NetworkTools = require('./modules/networkTools');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
    reset: '\x1b[0m',
    bright: '\x1b[1m',
    red: '\x1b[31m',
    green: '\x1b[32m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
    magenta: '\x1b[35m',
    cyan: '\x1b[36m'
};

class EnhancedDemo {
    constructor() {
        this.scheduler = new TaskScheduler();
        this.security = new SecurityManager();
        this.fileManager = new FileManager();
        this.networkTools = new NetworkTools();
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø
    showLogo() {
        console.clear();
        console.log(`${colors.cyan}${colors.bright}
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    DOGERAT ENHANCED DEMO                    ‚ïë
‚ïë                                                              ‚ïë
‚ïë  üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π                          ‚ïë
‚ïë  üîß –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏                   ‚ïë
‚ïë  üì± –£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram                      ‚ïë
‚ïë                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
${colors.reset}\n`);
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á
    async demoScheduler() {
        console.log(`${colors.yellow}üìÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ó–ê–î–ê–ß${colors.reset}\n`);

        // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á
        const tasks = [
            {
                name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞—Ç–∞—Ä–µ–∏',
                command: 'get_battery_status',
                schedule: 30, // –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
                deviceId: 'all'
            },
            {
                name: '–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                command: 'get_system_info',
                schedule: 60, // –∫–∞–∂–¥—ã–π —á–∞—Å
                deviceId: 'device_001'
            },
            {
                name: '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ WiFi',
                command: 'wifi_scan',
                schedule: 120, // –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
                deviceId: 'all'
            }
        ];

        console.log(`${colors.green}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á:${colors.reset}`);
        tasks.forEach(taskData => {
            const task = this.scheduler.createTask(
                taskData.name,
                taskData.command,
                taskData.schedule,
                taskData.deviceId
            );
            console.log(`   üìã ${task.name} (ID: ${task.id})`);
        });

        console.log(`\n${colors.blue}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:${colors.reset}`);
        console.log(`   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${this.scheduler.getAllTasks().length}`);
        console.log(`   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: ${this.scheduler.getAllTasks().filter(t => t.enabled).length}`);

        console.log(`\n${colors.cyan}üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:${colors.reset}`);
        console.log(this.scheduler.formatTasksForDisplay());
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    async demoSecurity() {
        console.log(`${colors.yellow}üîí –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò${colors.reset}\n`);

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
        this.security.logSecurityEvent('DEVICE_CONNECTED', 'New device connected from 192.168.1.100', 'info');
        this.security.logSecurityEvent('SUSPICIOUS_COMMAND', 'Attempt to execute dangerous command', 'warning');
        this.security.logSecurityEvent('FAILED_LOGIN', 'Failed authentication attempt', 'critical');

        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP
        console.log(`${colors.green}‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ IP:${colors.reset}`);
        this.security.recordFailedAttempt('192.168.1.50');
        this.security.recordFailedAttempt('192.168.1.50');
        this.security.recordFailedAttempt('192.168.1.50');
        console.log(`   üö´ IP 192.168.1.50 –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${this.security.isIPBlocked('192.168.1.50')}`);

        // –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        console.log(`\n${colors.green}‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è:${colors.reset}`);
        const testData = '–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è';
        const encrypted = this.security.encrypt(testData);
        if (encrypted) {
            console.log(`   üîê –î–∞–Ω–Ω—ã–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã: ${encrypted.encryptedData.substring(0, 20)}...`);
            const decrypted = this.security.decrypt(encrypted.encryptedData, encrypted.iv);
            console.log(`   üîì –î–∞–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã: ${decrypted}`);
        }

        // –û—Ç—á–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        console.log(`\n${colors.cyan}üìä –û—Ç—á–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:${colors.reset}`);
        console.log(this.security.formatSecurityReportForTelegram());
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    async demoFileManager() {
        console.log(`${colors.yellow}üìÅ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –§–ê–ô–õ–û–í–û–ì–û –ú–ï–ù–ï–î–ñ–ï–†–ê${colors.reset}\n`);

        // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        const testDir = path.join(__dirname, 'demo_files');
        if (!fs.existsSync(testDir)) {
            fs.mkdirSync(testDir, { recursive: true });
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
        const testFiles = [
            { name: 'test.txt', content: '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª' },
            { name: 'config.json', content: '{"test": true}' },
            { name: 'readme.md', content: '# –¢–µ—Å—Ç–æ–≤—ã–π README' }
        ];

        console.log(`${colors.green}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:${colors.reset}`);
        testFiles.forEach(file => {
            const filePath = path.join(testDir, file.name);
            fs.writeFileSync(filePath, file.content);
            console.log(`   üìÑ ${file.name}`);
        });

        // –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        console.log(`\n${colors.blue}üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${colors.reset}`);
        const files = this.fileManager.listFiles(testDir);
        console.log(this.fileManager.formatFileListForTelegram(files, 'demo_files'));

        // –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
        console.log(`\n${colors.cyan}üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é .txt:${colors.reset}`);
        const searchResults = this.fileManager.searchFiles(testDir, '.txt');
        console.log(this.fileManager.formatSearchResultsForTelegram(searchResults, '.txt'));

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        console.log(`\n${colors.magenta}‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:${colors.reset}`);
        const fileInfo = this.fileManager.getFileInfo(path.join(testDir, 'test.txt'));
        if (fileInfo) {
            console.log(`   üìÑ –ò–º—è: ${fileInfo.name}`);
            console.log(`   üìè –†–∞–∑–º–µ—Ä: ${this.fileManager.formatFileSize(fileInfo.size)}`);
            console.log(`   üìÖ –ò–∑–º–µ–Ω–µ–Ω: ${fileInfo.modified.toLocaleString()}`);
        }

        // –û—á–∏—Å—Ç–∫–∞
        fs.rmSync(testDir, { recursive: true, force: true });
        console.log(`\n${colors.yellow}üßπ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã${colors.reset}`);
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    async demoNetworkTools() {
        console.log(`${colors.yellow}üåê –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ï–¢–ï–í–´–• –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í${colors.reset}\n`);

        // Ping —Ç–µ—Å—Ç
        console.log(`${colors.green}‚úÖ Ping —Ç–µ—Å—Ç:${colors.reset}`);
        try {
            const pingResult = await this.networkTools.ping('8.8.8.8', 3);
            console.log(this.networkTools.formatPingForTelegram(pingResult));
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ ping: ${error.message}`);
        }

        // DNS lookup
        console.log(`\n${colors.blue}üåê DNS lookup:${colors.reset}`);
        try {
            const dnsResult = await this.networkTools.dnsLookup('google.com');
            console.log(this.networkTools.formatDnsForTelegram(dnsResult));
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ DNS: ${error.message}`);
        }

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏
        console.log(`\n${colors.cyan}üì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏:${colors.reset}`);
        try {
            const networkInfo = await this.networkTools.getNetworkInfo();
            if (networkInfo.success) {
                console.log(`   üñ•Ô∏è  Hostname: ${networkInfo.hostname}`);
                console.log(`   üíª Platform: ${networkInfo.platform}`);
                console.log(`   üèóÔ∏è  Architecture: ${networkInfo.arch}`);
                console.log(`   üåê Interfaces: ${Object.keys(networkInfo.interfaces).join(', ')}`);
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${error.message}`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
        console.log(`\n${colors.magenta}üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ URL:${colors.reset}`);
        try {
            const urlResult = await this.networkTools.checkUrl('https://httpbin.org/status/200');
            if (urlResult.success) {
                console.log(`   ‚úÖ URL –¥–æ—Å—Ç—É–ø–µ–Ω`);
                console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${urlResult.statusCode} ${urlResult.statusMessage}`);
                console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${urlResult.responseTime}ms`);
            } else {
                console.log(`   ‚ùå URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${urlResult.error}`);
            }
        } catch (error) {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ URL: ${error.message}`);
        }
    }

    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    async demoIntegration() {
        console.log(`${colors.yellow}üîó –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ú–û–î–£–õ–ï–ô${colors.reset}\n`);

        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        console.log(`${colors.green}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ç–∏:${colors.reset}`);
        const networkTask = this.scheduler.createTask(
            '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Google DNS',
            'ping:8.8.8.8',
            15, // –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
            'all'
        );
        console.log(`   üìã –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ${networkTask.name}`);

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏
        this.security.logSecurityEvent(
            'TASK_CREATED',
            `Network monitoring task created: ${networkTask.name}`,
            'info'
        );

        // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        console.log(`\n${colors.blue}üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:${colors.reset}`);
        const configPath = path.join(__dirname, 'config', 'enhanced_config.json');
        if (fs.existsSync(configPath)) {
            const backupPath = this.security.createBackup(configPath);
            if (backupPath) {
                console.log(`   ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${path.basename(backupPath)}`);
            }
        }

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
        console.log(`\n${colors.cyan}üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${colors.reset}`);
        console.log(`   üìÖ –ó–∞–¥–∞—á –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: ${this.scheduler.getAllTasks().length}`);
        console.log(`   üîí –°–æ–±—ã—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${this.security.getSecurityStats().totalLogs}`);
        console.log(`   üìÅ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: ${this.fileManager.allowedExtensions.length}`);
        console.log(`   üåê –°–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –ê–∫—Ç–∏–≤–Ω—ã`);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    showDevelopmentFeatures() {
        console.log(`${colors.yellow}üë®‚Äçüíª –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò${colors.reset}\n`);

        const features = [
            {
                category: 'üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                items: [
                    '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
                    '–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –∏ –∂–µ–ª–µ–∑–µ',
                    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏',
                    '–ö–æ–Ω—Ç—Ä–æ–ª—å —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã'
                ]
            },
            {
                category: 'üìÅ –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
                items: [
                    '–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã',
                    '–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ Telegram',
                    '–ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º',
                    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏'
                ]
            },
            {
                category: 'üåê –°–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                items: [
                    '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–∏',
                    '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤',
                    '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞',
                    '–ê–Ω–∞–ª–∏–∑ DNS –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏'
                ]
            },
            {
                category: '‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
                items: [
                    '–ì–∏–±–∫–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á',
                    '–¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—ã—Ç–∏–π',
                    '–ú–∞–∫—Ä–æ—Å—ã –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥',
                    '–£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
                ]
            },
            {
                category: 'üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
                items: [
                    '–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö AES-256',
                    '–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∞—É–¥–∏—Ç–∞',
                    '–ó–∞—â–∏—Ç–∞ –æ—Ç –∞—Ç–∞–∫ –∏ –≤—Ç–æ—Ä–∂–µ–Ω–∏–π',
                    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ'
                ]
            },
            {
                category: 'üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
                items: [
                    '–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
                    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
                    '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —Ç—Ä–µ–Ω–¥–æ–≤',
                    '–ê–ª–µ—Ä—Ç—ã –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö'
                ]
            }
        ];

        features.forEach(category => {
            console.log(`${colors.cyan}${category.category}${colors.reset}`);
            category.items.forEach(item => {
                console.log(`   ‚Ä¢ ${item}`);
            });
            console.log('');
        });

        console.log(`${colors.green}üöÄ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:${colors.reset}`);
        console.log(`   ‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö`);
        console.log(`   ‚Ä¢ –£–¥–∞–ª–µ–Ω–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞`);
        console.log(`   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á`);
        console.log(`   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π`);
        console.log(`   ‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏`);
        console.log(`   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CI/CD –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏`);
    }

    // –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    async run() {
        this.showLogo();

        console.log(`${colors.green}üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é DogeRat Enhanced!${colors.reset}\n`);
        console.log(`${colors.blue}–≠—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∂–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è${colors.reset}`);
        console.log(`${colors.blue}Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç.${colors.reset}\n`);

        try {
            // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
            await this.demoScheduler();
            console.log(`\n${'='.repeat(60)}\n`);

            await this.demoSecurity();
            console.log(`\n${'='.repeat(60)}\n`);

            await this.demoFileManager();
            console.log(`\n${'='.repeat(60)}\n`);

            await this.demoNetworkTools();
            console.log(`\n${'='.repeat(60)}\n`);

            await this.demoIntegration();
            console.log(`\n${'='.repeat(60)}\n`);

            this.showDevelopmentFeatures();

            console.log(`${colors.green}‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${colors.reset}\n`);
            console.log(`${colors.yellow}üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:${colors.reset}`);
            console.log(`   ‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ README_ENHANCED.md`);
            console.log(`   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node start_enhanced.js`);
            console.log(`   ‚Ä¢ –ò–∑—É—á–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ config/enhanced_config.json`);

        } catch (error) {
            console.error(`${colors.red}‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: ${error.message}${colors.reset}`);
        }
    }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
if (require.main === module) {
    const demo = new EnhancedDemo();
    demo.run().catch(error => {
        console.error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
        process.exit(1);
    });
}

module.exports = EnhancedDemo;